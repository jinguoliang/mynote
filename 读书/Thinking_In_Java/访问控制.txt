Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2016-10-18T15:15:57+08:00

====== 访问控制 ======
Created 星期二 18 十月 2016

=== 接口和实现 ===
1. 访问控制经常被称为实现隐藏；将数据和方法包裹进类里经常被称为封装；结果就产生了带有某些特性和行为的数据类型。
2. 访问控制在数据类型中放入边界有两个原因
	a. 规定 client 能干什么不能干什么，内部机制改变不用担心 client 是否偶然调用，只要保证接口不变，client 就不用改变
	b. 接口与实现分离
3. 代码风格： public → protected → private 更便于 client 使用，因为他只关心 public 的
4. javadoc 生成文档

=== 类访问 ===
1. 类也有访问控制， public 修饰的类才能被 client 使用，实例化
2. 一个编译单元（文件）只有一个 public 类，其中的思想是：那个共有类代表了编译单元唯一的接口
3. 公有类跟文件名一致
4. 一个编译单元内可以没有 public 的类
5. 只在一个包里使用的类可以不用 public 修饰，为包内访问， __但是 client 却能使用它的静态共有方法__
6. private 和 protected 不能修饰类， 可以通过将构造函数私有化来阻止别人直接访问你的类
7. 包访问的类

=== 总结 ===
1. 在任何关系中，有一个多方尊敬的分界线是非常重要的
2. 没有规则，客户端就会做任何操作，尽管你可能并不想，每个东西都暴露给整个世界
3. 本章介绍了如何将类组成库
	a. 一组类打包进库
	b. 对类成员的访问控制
4. 注意访问控制关注的是关系，一种通信，库创建者和外部用户。然而很多情况并不是这样，如你自己写代码，此时勇哥默认包名就行
