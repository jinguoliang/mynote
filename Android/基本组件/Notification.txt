Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2015-04-30T16:32:23+08:00

====== Notification ======
Created 星期四 30 四月 2015

          在状态栏中一般有两类（使用FLAG_标记）：
          （1）正在进行的程序；
          （2）是通知事件；

快速创建一个Notification的步骤简单可以分为以下四步：
1. nManager = (NotificationManager) this.getSystemService(__Context.NOTIFICATION_SERVICE__);  
2. 对Notification的一些属性进行设置比如：内容，图标，标题，相应notification的动作进行处理等等
	notification.icon = R.drawable.ic_launcher;// 设置通知的图标
	notification.tickerText = tickerText; // 显示在状态栏中的文字
	notification.when = when; // 设置来通知时的时间
	notification.sound = Uri.parse("android.resource://com.sun.alex/raw/dida"); // 自定义声音
	notification.flags = Notification.FLAG_NO_CLEAR; // 点击清除按钮时就会清除消息通知,但是点击通知栏的通知时不会消失
	notification.flags = Notification.FLAG_ONGOING_EVENT; // 点击清除按钮不会清除消息通知,可以用来表示在正在运行
	notification.flags |= Notification.FLAG_AUTO_CANCEL; // 点击清除按钮或点击通知后会自动消失
	notification.flags |= Notification.FLAG_INSISTENT; // 一直进行，比如音乐一直播放，知道用户响应
	notification.defaults = Notification.DEFAULT_SOUND; // 调用系统自带声音
	notification.defaults = Notification.DEFAULT_VIBRATE;// 设置默认震动
	notification.defaults = Notification.DEFAULT_ALL; // 设置铃声震动
	notification.defaults = Notification.DEFAULT_ALL; // 把所有的属性设置成默认
	或者使用Notification.Builder
4. 通过NotificationManager对象的notify（）方法来执行一个notification的消息；
	a. nManager.notify(ID, notification);  
5. 通过NotificationManager对象的cancel（）方法来取消一个notificatioin的消息；
	a. nManager.cancel(ID);  
